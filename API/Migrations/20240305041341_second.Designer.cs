// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20240305041341_second")]
    partial class second
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Asistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordenadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DenominacionId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsExtranjero")
                        .HasColumnType("bit");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int>("EstatusAsistencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagenes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MiembroId")
                        .HasColumnType("int");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<int>("ReportadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TiempoCompletada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TiempoLlegada")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoAsistencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadMiembroId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoColorId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoMarcaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoModeloId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoTipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DenominacionId");

                    b.HasIndex("MiembroId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("UnidadMiembroId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VehiculoColorId");

                    b.HasIndex("VehiculoMarcaId");

                    b.HasIndex("VehiculoModeloId");

                    b.HasIndex("VehiculoTipoId");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("Domain.Entities.Denominacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TramoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TramoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Denominaciones");
                });

            modelBuilder.Entity("Domain.Entities.HistoricoAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsistencia")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidadMiembro")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricoAsistencias");
                });

            modelBuilder.Entity("Domain.Entities.HistoricoUnidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ficha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUnidad")
                        .HasColumnType("int");

                    b.Property<int>("TramoId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricoUnidades");
                });

            modelBuilder.Entity("Domain.Entities.Miembro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("AccesoTotal")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Autorizado")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int>("Institucion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerteneceA")
                        .HasColumnType("int");

                    b.Property<int>("RangoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RangoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Miembro");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Domain.Entities.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Domain.Entities.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionMacro")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("Domain.Entities.Rango", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Rangos");
                });

            modelBuilder.Entity("Domain.Entities.RegionesAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegionMacro")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegionesAsistencia");
                });

            modelBuilder.Entity("Domain.Entities.SupervisorEncargado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriaSupervisor")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IOT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MiembroId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MiembroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SupervisoresEncargados");
                });

            modelBuilder.Entity("Domain.Entities.SupervisorEncargadoTramo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupervisorEncargadoId")
                        .HasColumnType("int");

                    b.Property<int>("TramoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorEncargadoId");

                    b.HasIndex("TramoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("SupervisoresEncargadosTramos");
                });

            modelBuilder.Entity("Domain.Entities.TipoAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriaAsistencia")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TipoAsistencias");
                });

            modelBuilder.Entity("Domain.Entities.TipoUnidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TipoUnidades");
                });

            modelBuilder.Entity("Domain.Entities.Tramo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PerteneceAGestion")
                        .HasColumnType("bit");

                    b.Property<int>("RegionAsistenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionAsistenciaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tramo");
                });

            modelBuilder.Entity("Domain.Entities.Unidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cobertura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DenominacionId")
                        .HasColumnType("int");

                    b.Property<bool>("EstaDisponible")
                        .HasColumnType("bit");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ficha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PuntosAsignados")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUnidadId")
                        .HasColumnType("int");

                    b.Property<int>("TramoId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DenominacionId");

                    b.HasIndex("TipoUnidadId");

                    b.HasIndex("TramoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("Domain.Entities.UnidadMiembro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MiembroId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MiembroId");

                    b.HasIndex("UnidadId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UnidadMiembro");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("bit");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RolUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.UsuarioPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermisoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioPermisos");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("VehiculoColores");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoMarca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("VehiculoMarcas");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoModelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoMarcaId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoTipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VehiculoMarcaId");

                    b.HasIndex("VehiculoTipoId");

                    b.ToTable("VehiculoModelos");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("VehiculoTipos");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ActualizarAsistencia", b =>
                {
                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SP_ActualizarAsistencias_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_AsistenciaAsignadaUnidad", b =>
                {
                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsExtranjero")
                        .HasColumnType("bit");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("EstatusAsistencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCiudadano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAsistencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoMarca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoModelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoTipo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SP_AsistenciaAsignadaUnidad_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ContadorAsistenciasPorUnidad", b =>
                {
                    b.Property<int>("TotalAccidentes")
                        .HasColumnType("int");

                    b.Property<int>("TotalAsistencias")
                        .HasColumnType("int");

                    b.ToTable("SP_ContadorAsistenciasPorUnidad_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_HistorialAsistencia", b =>
                {
                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ficha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rango")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SP_HistorialAsistencias_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ObtenerListadoAsistencias", b =>
                {
                    b.Property<string>("CedulaAgente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Coordenadas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DenominacionUnidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsExtranjero")
                        .HasColumnType("bit");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("EstatusAsistencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FichaUnidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreAgente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCiudadano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerteneceA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangoAgente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportadaPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAsistencias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUnidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tramo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoMarca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoModelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehiculoTipo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SP_ObtenerListadoAsistencias_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ReporteAsistenciasDetalles", b =>
                {
                    b.Property<string>("CategoriaAsistencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaSoldado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EsExtranjero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ficha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Institucion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCiudadano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreSoldado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pasaporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuienReporta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RangoAgente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiempoCompletada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiempoCreacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiempoLlegada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAsistencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tramo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SP_ReporteAsistenciasDetalles_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ReporteEstadisticoAsistencias", b =>
                {
                    b.Property<int>("Ambulancia")
                        .HasColumnType("int");

                    b.Property<int>("Atropellamiento")
                        .HasColumnType("int");

                    b.Property<int>("Calentamiento")
                        .HasColumnType("int");

                    b.Property<int>("CamionRescate")
                        .HasColumnType("int");

                    b.Property<int>("Choque")
                        .HasColumnType("int");

                    b.Property<int>("ChoqueConAnimal")
                        .HasColumnType("int");

                    b.Property<int>("ChoqueMultiple")
                        .HasColumnType("int");

                    b.Property<int>("Combustible")
                        .HasColumnType("int");

                    b.Property<int>("Deslizamiento")
                        .HasColumnType("int");

                    b.Property<int>("Electrica")
                        .HasColumnType("int");

                    b.Property<int>("Gruas")
                        .HasColumnType("int");

                    b.Property<int>("Mecanica")
                        .HasColumnType("int");

                    b.Property<int>("Neumatico")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seguridad")
                        .HasColumnType("int");

                    b.Property<int>("Talleres")
                        .HasColumnType("int");

                    b.Property<int>("Volcadura")
                        .HasColumnType("int");

                    b.ToTable("SP_ReporteEstadisticoAsistencias_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ReporteEstadisticoTipoAsistenciaUnidadApp", b =>
                {
                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.ToTable("SP_ReporteEstadisticoTipoAsistenciaUnidadApp_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ReporteEstadisticoTotalTramoApp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.ToTable("SP_ReporteEstadisticoTotalTramoApp_Result");
                });

            modelBuilder.Entity("Domain.ProcedureResults.SP_ReporteEstadisticoUnidadTramoApp", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.ToTable("SP_ReporteEstadisticoUnidadTramoApp_Result");
                });

            modelBuilder.Entity("Domain.ResultSetModels.SP_CreateUnidadMiembro", b =>
                {
                    b.Property<bool>("AccesoTotal")
                        .HasColumnType("bit");

                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsEncargado")
                        .HasColumnType("bit");

                    b.Property<string>("Ficha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiembroInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tramo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadMiembroId")
                        .HasColumnType("int");

                    b.ToTable("SP_CreateUnidadMiembro_Result");
                });

            modelBuilder.Entity("Domain.ResultSetModels.SP_UnidadAutoCompleteResult", b =>
                {
                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstaDisponible")
                        .HasColumnType("bit");

                    b.Property<string>("Ficha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tramo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadId")
                        .HasColumnType("int");

                    b.ToTable("SP_UnidadAutoComplete_Result");
                });

            modelBuilder.Entity("Domain.ResultSetsModels.SP_ReporteAsistenciasResult", b =>
                {
                    b.Property<string>("CategoriaAsistencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAsistencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<string>("Tramo")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("SP_ReporteAsistencias_Result");
                });

            modelBuilder.Entity("Domain.Entities.Asistencia", b =>
                {
                    b.HasOne("Domain.Entities.Denominacion", "Denominacion")
                        .WithMany()
                        .HasForeignKey("DenominacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Miembro", "Miembro")
                        .WithMany()
                        .HasForeignKey("MiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Municipio", "Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UnidadMiembro", "UnidadMiembro")
                        .WithMany()
                        .HasForeignKey("UnidadMiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.HasOne("Domain.Entities.VehiculoColor", "VehiculoColor")
                        .WithMany()
                        .HasForeignKey("VehiculoColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.VehiculoMarca", "VehiculoMarca")
                        .WithMany()
                        .HasForeignKey("VehiculoMarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.VehiculoModelo", "VehiculoModelo")
                        .WithMany()
                        .HasForeignKey("VehiculoModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.VehiculoTipo", "VehiculoTipo")
                        .WithMany()
                        .HasForeignKey("VehiculoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Denominacion");

                    b.Navigation("Miembro");

                    b.Navigation("Municipio");

                    b.Navigation("Provincia");

                    b.Navigation("UnidadMiembro");

                    b.Navigation("Usuario");

                    b.Navigation("VehiculoColor");

                    b.Navigation("VehiculoMarca");

                    b.Navigation("VehiculoModelo");

                    b.Navigation("VehiculoTipo");
                });

            modelBuilder.Entity("Domain.Entities.Denominacion", b =>
                {
                    b.HasOne("Domain.Entities.Tramo", "Tramo")
                        .WithMany()
                        .HasForeignKey("TramoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Tramo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.HistoricoAsistencia", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.HistoricoUnidad", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Miembro", b =>
                {
                    b.HasOne("Domain.Entities.Rango", "Rango")
                        .WithMany()
                        .HasForeignKey("RangoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Rango");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Municipio", b =>
                {
                    b.HasOne("Domain.Entities.Provincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Provincia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Permiso", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Provincia", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Rango", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.RegionesAsistencia", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.SupervisorEncargado", b =>
                {
                    b.HasOne("Domain.Entities.Miembro", "Miembro")
                        .WithMany()
                        .HasForeignKey("MiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Miembro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.SupervisorEncargadoTramo", b =>
                {
                    b.HasOne("Domain.Entities.SupervisorEncargado", "SupervisorEncargado")
                        .WithMany()
                        .HasForeignKey("SupervisorEncargadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Tramo", "Tramo")
                        .WithMany()
                        .HasForeignKey("TramoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("SupervisorEncargado");

                    b.Navigation("Tramo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.TipoAsistencia", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.TipoUnidad", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Tramo", b =>
                {
                    b.HasOne("Domain.Entities.RegionesAsistencia", "RegionAsistencia")
                        .WithMany()
                        .HasForeignKey("RegionAsistenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("RegionAsistencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Unidad", b =>
                {
                    b.HasOne("Domain.Entities.Denominacion", "Denominacion")
                        .WithMany()
                        .HasForeignKey("DenominacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoUnidad", "TipoUnidad")
                        .WithMany()
                        .HasForeignKey("TipoUnidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Tramo", "Tramo")
                        .WithMany()
                        .HasForeignKey("TramoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Denominacion");

                    b.Navigation("TipoUnidad");

                    b.Navigation("Tramo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.UnidadMiembro", b =>
                {
                    b.HasOne("Domain.Entities.Miembro", "Miembro")
                        .WithMany()
                        .HasForeignKey("MiembroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Unidad", "Unidad")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Miembro");

                    b.Navigation("Unidad");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.UsuarioPermiso", b =>
                {
                    b.HasOne("Domain.Entities.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("Permisos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoColor", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoMarca", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoModelo", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.HasOne("Domain.Entities.VehiculoMarca", "VehiculoMarca")
                        .WithMany()
                        .HasForeignKey("VehiculoMarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.VehiculoTipo", "VehiculoTipo")
                        .WithMany()
                        .HasForeignKey("VehiculoTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("VehiculoMarca");

                    b.Navigation("VehiculoTipo");
                });

            modelBuilder.Entity("Domain.Entities.VehiculoTipo", b =>
                {
                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
