// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Permiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("bit");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EsAdministrador = true,
                            Estatus = true,
                            FechaCreacion = new DateTime(2023, 3, 21, 21, 5, 57, 750, DateTimeKind.Local).AddTicks(2626),
                            FechaModificacion = new DateTime(2023, 3, 21, 21, 5, 57, 750, DateTimeKind.Local).AddTicks(2633),
                            FechaNacimiento = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genero = 0,
                            PasswordHash = new byte[] { 125, 255, 106, 41, 188, 224, 119, 81, 48, 128, 152, 8, 49, 244, 182, 68, 165, 63, 171, 78, 249, 129, 71, 70, 101, 233, 218, 50, 236, 93, 74, 233, 172, 164, 75, 84, 185, 93, 2, 203, 144, 154, 71, 141, 146, 232, 28, 86, 156, 123, 214, 64, 43, 22, 101, 86, 220, 13, 98, 186, 248, 35, 223, 176 },
                            PasswordSalt = new byte[] { 27, 140, 210, 235, 211, 169, 151, 107, 37, 105, 141, 51, 150, 203, 240, 141, 183, 188, 81, 89, 178, 54, 167, 244, 118, 151, 36, 90, 145, 169, 65, 82, 24, 20, 118, 34, 230, 146, 88, 90, 213, 98, 65, 174, 66, 33, 216, 71, 218, 167, 246, 4, 96, 165, 135, 58, 36, 75, 64, 197, 143, 210, 95, 158, 95, 89, 132, 10, 160, 135, 160, 206, 170, 23, 113, 81, 144, 239, 153, 151, 217, 42, 86, 231, 24, 191, 242, 53, 155, 199, 128, 46, 47, 86, 108, 42, 153, 203, 12, 86, 171, 122, 192, 232, 38, 25, 168, 164, 36, 13, 218, 70, 18, 238, 106, 241, 35, 53, 248, 13, 139, 145, 164, 42, 247, 53, 124, 244 },
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Domain.Entities.UsuarioPermiso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("PermisoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PermisoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioPermisos");
                });

            modelBuilder.Entity("Domain.Entities.UsuarioPermiso", b =>
                {
                    b.HasOne("Domain.Entities.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany("Permisos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Permisos");
                });
#pragma warning restore 612, 618
        }
    }
}
